server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;  # Redirect HTTP to HTTPS
}

server {
    listen 443 ssl;
    server_name _;

    # Example of custom uwsgi buffer settings
    uwsgi_buffer_size 128k;
    uwsgi_buffers 4 256k;
    uwsgi_busy_buffers_size 256k;
    ssl_certificate /etc/ssl/certs/wildcard_calacademy_org.pem;
    ssl_certificate_key /etc/ssl/private/wildcard_calacademy_org.key;

    include /etc/nginx/bots.d/blockbots.conf;
    include /etc/nginx/bots.d/ddos.conf;

    # Blocking logic
    if ($is_bot) {
        set $block_request 1;
    }
    if ($is_blocked_ip) {
        set $block_request 1;
    }

    location / {
        # CORS headers (decided by $cors_header from the main config)
        add_header 'Access-Control-Allow-Origin'  $cors_header always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;

        # Return 403 if this is a known bot or a blocked IP
        if ($block_request) {
            return 403;
        }

        # Return early on OPTIONS requests
        if ($request_method = OPTIONS) {
            return 204;
        }

        # Apply rate limiting
        limit_req zone=image_zone burst=2 nodelay;

        # Pass requests to @image-server if the file doesn't exist
        try_files $uri @image-server;
    }

    location @image-server {
        uwsgi_pass image-server:29000;
        include /etc/nginx/uwsgi_params;
        uwsgi_param Host $host;
        uwsgi_param X-Real-IP $remote_addr;
        uwsgi_param X-Forwarded-For $proxy_add_x_forwarded_for;
        uwsgi_param X-Forwarded-Proto $http_x_forwarded_proto;
        uwsgi_param X-Request-Id $request_id;
    }
}
